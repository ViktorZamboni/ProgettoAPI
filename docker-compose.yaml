version: '3.3'

secrets:
  root_db_password:
    file: root_db_password.txt
  admin_ws_password:
    file: admin_ws_password.txt
  init_secret:
    file: init_secret.txt
  delete_secret:
    file: delete_secret.txt

networks:
  ws-sql-net:
    driver: bridge
  ws-rp-net:
    driver: bridge
  app-net:
    driver: bridge
  cert-net:
    driver: bridge

services:
  # gfs-certbot:
  #  image: certbot/dns-ovh
  #  container_name: gfs-certbot
  #  volumes: 
  #    - ./certbot/conf:/etc/letsencrypt
  #    - ./certbot/www:/var/www/certbot
  #  restart: unless-stopped
  #  command: certonly --webroot -w /var/www/certbot --force-renewal --email "email" -d 'dominio che funziona' --agree-tos
  
  gfs-sql-server:
    image: mysql:latest
    container_name: gfs-sql-server
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/root_db_password
    networks:
      - ws-sql-net
    ports:          # Solo in fase di progettazione
      - 3350:3306
    volumes:
      - db-storage:/var/lib/mysql
    secrets:
      - root_db_password
    restart: always

# WEBAPP DEVELPOMENT 
#  gfs-webapp-dev:
#    image: node:latest
#    container_name: gfs-webapp-dev
#    working_dir: /app
#    ports:
#      - 4200:4200
#    tty: true
#    volumes:
#      - ./webapp-dev/:/app
#      - node_modules:/app/node_modules
#    secrets:
#      - admin_ws_password
#      - init_secret
  
  # WS DB SERVER
  gfs-ws-server:
    image: node:latest
    container_name: gfs-ws-server
    networks:
      - ws-sql-net
      - ws-rp-net
    tty: true
    volumes:
      - ./wsserver/:/app
    restart: always
    depends_on:
      - gfs-sql-server
    secrets:
      - admin_ws_password
      - init_secret
      - root_db_password
      - delete_secret
    working_dir: /app 
    command: bash -c "npm install && npm install -g nodemon && nodemon app.js"
    
# REV PROXY
  gfs-reverse-proxy:
    image: nginx:latest
    container_name: gfs-proxy-server
    networks:
      - ws-rp-net
      - app-net
      - cert-net
    volumes:
      - ./cert/archive:/etc/nginx/ssl
      - nginx_cache:/data/nginx/cache
      - ./proxyserver/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 443:443
    restart: always
    depends_on:
      - gfs-ws-server
      - gfs-webapp
   
  gfs-webapp:
    image: nginx:latest
    container_name: gfs-webapp
    networks:
      - app-net
    volumes:
      - ./webapp/:/usr/share/nginx/html
    restart: always


volumes:
  db-storage:
    driver: local
  node_modules:
    driver: local
  nginx_cache:
    driver: local